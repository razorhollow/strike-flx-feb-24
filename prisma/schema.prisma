datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique
  isActive Boolean @default(false)
  isAdmin Boolean @default(false)
  isNew Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model RSVP {
  id String @id @default(cuid())
  name String
  email String
  comments String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id         Int        @id @default(autoincrement())
  title      String
  date       DateTime
  startTime  DateTime
  endTime    DateTime
  comments   Comment[]
  locationId Int
  location   Location   @relation(fields: [locationId], references: [id])
  agenda     AgendaItem[]
}

model AgendaItem {
  id      Int     @id @default(autoincrement())
  title   String
  eventId Int
  event   Event   @relation(fields: [eventId], references: [id])
}

model Comment {
  id      Int     @id @default(autoincrement())
  name    String
  content String
  eventId Int
  event   Event   @relation(fields: [eventId], references: [id])
}

model Location {
  id      Int      @id @default(autoincrement())
  name    String
  address String
  events  Event[]
}

// Default location (Team Headquarters)
model TeamHeadquarters {
  id      Int     @id @default(autoincrement())
  name    String  @default("Team Headquarters")
  address String  @default("5588 CR-11, Alpine, NY 14805")
}
